<?php
/**
 * Created by PhpStorm.
 * User: fish
 * Date: 2015/9/24
 * Time: 11:03
 */
    /*二进制运算 只有0,1两个数，易于电子方式实现
        1.二进制的最高位是符号位，0表正数，1表负数
        2.正数的原码、反码、补码都一样
        3.负数的反码=它的原码符号位不变，其他位取反
            -1       --> 10000000 00000000 00000000 00000001;
            -1的反码 --> 11111111 11111111 11111111 11111110;
            -1的补码 --> 11111111 11111111 11111111 11111111;
        4.负数的补码=它的反码+1
        5.0的反码、补码都是0
        6.php没有无符号数，所有数都是有符号位的
        7.计算机运算时是以补码方式运算的，不管它是正数还是负数
    */
    /*二进制运算符
        $a & $b  按位与    把$a和$b中都为1的位设为1
        $a | $b  按位或    把$a或$b中为1的位设为1
        $a ^ $b  按位异或  把$a和$b中不同的位设为1
        ~$a      按位非    把$a中的0设为1,1设为0
        $a << $b 左移      符号位不变，低位补0。每一次移动都表示乘以2
        $a >> $b 右移      低位溢出，符号位不变，并用符号位补高位.每一次移动都表示除以2
        PHP中没有 <<< 和 >>>
     */

    $a = ~2;
    /*  2 的补码 = 原码 --> 00000000 00000000 00000000 00000010
        ~2 的补码 --> 11111111 11111111 11111111 11111101
        ~2 的反码 --> 11111111 11111111 11111111 11111100
        ~2 的原码 --> 10000000 00000000 00000000 00000011  就是 -3
    */
    echo '~2 = '.$a.'</br>';

    $a = 2 & 3;
    /*  2 的补码 = 原码 --> 00000000 00000000 00000000 00000010
        3 的补码 = 原码 --> 00000000 00000000 00000000 00000011
        2 & 3 的补码 --> 00000000 00000000 00000000 00000010 正数的补码= 原码，所以结果是2
     */
    echo '2 & 3 = '.$a.'</br>';

    $a = 2 | 3;
    echo '2 | 3 = '.$a.'</br>'; //同上， 2 | 3 就是3

    $a = -3 ^ 3;
    /*  -3 的原码 --> 10000000 00000000 00000000 00000011
        -3 的反码 --> 11111111 11111111 11111111 11111100
        -3 的补码 --> 11111111 11111111 11111111 11111101
        3 的补码 = 原码 --> 00000000 00000000 00000000 00000011
        -3 ^ 3 的补码 --> 11111111 11111111 11111111 11111110
        -3 ^ 3 的反码 --> 11111111 11111111 11111111 11111101
        -3 ^ 3 的原码 --> 10000000 00000000 00000000 00000010  就是-2
     */
    echo '-3 ^ 3 = '.$a.'</br>';

    echo '</br>';
    echo '</br>';
    $a = 1>>2;
    /*  1 的补码 = 原码 --> 00000000 00000000 00000000 00000001
        1 >> 2 的补码 --> 00000000 00000000 00000000 00000000  就是0
    */
    $b = -1 >> 2;
    /*  -1 的补码 --> 11111111 11111111 11111111 11111111
        -1 >> 2 的补码 --> 11111111 11111111 11111111 11111111
        -1 >> 2 的反码 --> 11111111 11111111 11111111 11111110
        -1 >> 2 的原码 --> 10000000 00000000 00000000 00000001 就是-1
    */
    $c = 1 << 2;
    /*  1 的补码 = 原码 --> 00000000 00000000 00000000 00000001
        1 << 2 的补码 --> 00000000 00000000 00000000 00000100  就是4
    */
    $d = -1 << 2;
    /*  -1 的补码 --> 11111111 11111111 11111111 11111111
        -1 << 2 的补码 --> 11111111 11111111 11111111 11111100
        -1 >> 2 的反码 --> 11111111 11111111 11111111 11111011
        -1 >> 2 的原码 --> 10000000 00000000 00000000 00000100 就是-4
    */
    echo '1 >> 2 = '.$a.'</br>';
    echo '-1 >> 2 = '.$b.'</br>';
    echo '1 << 2 = '.$c.'</br>';
    echo '-1 << 2 = ' .$d.'</br>';
?>